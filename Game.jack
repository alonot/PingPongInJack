// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Ball/Game.jack

/**
 * Implements the Ball Dance game.
 * This simple game allows the user to move a black Ball around
 * the screen, and change the Ball's size during the movement.
 * When the game starts, a Ball of 30 by 30 pixels is shown at the
 * top-left corner of the screen. The user controls the Ball as follows.
 * The 4 arrow keys are used to move the Ball up, down, left, and right.
 * The 'z' and 'x' keys are used, respectively, to decrement and increment
 * the Ball's size. The 'q' key is used to quit the game.
 */

class Game {
   field Ball ball; // the Ball of this game
  // field Slider slider1,slider2;
   field int direction1,direction2;
   field int Ballcursor;
   field int score1,score2;

   /** Constructs a new Ball Game. */
   constructor Game new() {
      // Creates a 30 by 30 pixels Ball and positions it at the top-left
      // of the screen.
      let ball = Ball.new(127, 127, 4);
     // let slider2=Slider.new(17,20,50,3);
     // let slider1= Slider.new(497,20,50,1);
      let direction1 = 0;
      let direction2=0;  // initial state is no movement
      let score1=0;
      let score2=0;
      let Ballcursor=17;
      return this;
   }



   /** Disposes this game. */
   method void dispose() {
      do ball.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the Ball in the current direction. */
   method int moveBall() {
      var int ans;
      let ans= ball.move(direction1,direction2);
      //do a.dispose();
      //do  b.dispose();
      do Sys.wait(16);
      return ans;
   }


   /** Runs the game: handles the user's inputs and moves the Ball accordingly */
   method void run() {
      var boolean exit;
      var int result,key;
      let exit=false;

      while (~exit) {
            // waits for a key to be pressed
         while (key = 0) {
            let key = Keyboard.keyPressed();
            let result = moveBall();
            if(~(result = 0)){
               if ( result =1 ){
                  let score2=score2+1;
               }else{
                  let score1=score1+1;
               }
               let ball=Ball.new(127, 127, 4);
               let key =100;
            }
         }
         if (key = 131) { let direction1 = 1; }   // up arrow
         if (key = 133) { let direction1 = -1; }   // down arrow
         let key=0;
         
      
     } // while
     return;
   }
}



